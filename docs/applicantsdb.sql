-- SQL Script generated by MySQL-Workbench
-- Model: applicantsdb    Version: 2.0
-- WARNING: SQLITE USERS: remove "comment" part and this script will work

-- -----------------------------------------------------
-- Schema applicantsdb
-- -----------------------------------------------------
-- applicants simple db schema

-- -----------------------------------------------------
-- Table `nom_user_registers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `nom_user_registers` ;

CREATE TABLE IF NOT EXISTS `nom_user_registers` (
  `cod_user` VARCHAR(80) NOT NULL COMMENT 'named ic or passport code or licence number depends of country',
  `email` VARCHAR(80) NULL DEFAULT NULL COMMENT 'identification login of the user as alternate',
  `password` VARCHAR(80) NULL DEFAULT NULL COMMENT 'passowrd encripted by the framework',
  `api_token` VARCHAR(80) NULL DEFAULT NULL COMMENT 'api key for non password usage',
  `level` VARCHAR(80) NULL DEFAULT NULL COMMENT 'from 0 as invited applicant or 1 as registered user or 5 as manager of vacancies',
  `created_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date creation of',
  `updated_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date change of',
  PRIMARY KEY (`cod_user`))
COMMENT = 'represent the internal users to access the vacancies manager';


-- -----------------------------------------------------
-- Table `nom_user_profile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `nom_user_profile` ;

CREATE TABLE IF NOT EXISTS `nom_user_profile` (
  `cod_user` VARCHAR(80) NOT NULL COMMENT 'named ic or passport code or licence number depends of country',
  `first_name` VARCHAR(80) NULL DEFAULT NULL COMMENT 'name',
  `second_name` VARCHAR(80) NULL DEFAULT NULL COMMENT 'surname',
  `last_name` VARCHAR(80) NULL DEFAULT NULL COMMENT 'named apellido in latam',
  `second_surname` VARCHAR(80) NULL DEFAULT NULL COMMENT 'second surname or appellido in latam',
  `presentation` VARCHAR(280) NULL DEFAULT NULL COMMENT 'a short description of',
  `education_level` VARCHAR(80) NULL DEFAULT NULL COMMENT 'level graduated education - 1 primary - 4 univers - 5 doctor - 6 mgrs',
  `address_born` VARCHAR(80) NULL DEFAULT NULL COMMENT 'place where its born',
  `address_living` VARCHAR(80) NULL DEFAULT NULL COMMENT 'place where its currently living or sleeping',
  `first_phone` VARCHAR(80) NULL DEFAULT NULL COMMENT 'main mobile phone or local one',
  `second_phone` VARCHAR(80) NULL DEFAULT NULL COMMENT 'another phone number for contact',
  `picture_face` VARCHAR(80) NULL DEFAULT NULL COMMENT 'path photo of the presentation of their face',
  `picture_body` VARCHAR(80) NULL DEFAULT NULL COMMENT 'path photo of the full presentation of their person',
  `created_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date creation of',
  `updated_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date change of',
  PRIMARY KEY (`cod_user`))
COMMENT = 'table for the people tregistered with thier caracteristics';


-- -----------------------------------------------------
-- Table `nom_vacancies_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `nom_vacancies_details` ;

CREATE TABLE IF NOT EXISTS `nom_vacancies_details` (
  `cod_vacancies` VARCHAR(80) NOT NULL COMMENT 'id of the vacancy',
  `fixed` VARCHAR(80) NOT NULL DEFAULT 'P' COMMENT 'if the job is P-ermanent or T-emporally',
  `name` VARCHAR(180) NULL DEFAULT NULL COMMENT 'long title of the vacancy work, short title is at the main table',
  `description` VARCHAR(280) NULL DEFAULT NULL COMMENT 'short description of the vacancy work to offer',
  `direction` VARCHAR(180) NULL DEFAULT NULL COMMENT 'address of the position, mostly close to and not detailed',
  `start` VARCHAR(80) NULL DEFAULT NULL COMMENT 'YYYYMMDD date of valid publication for public people',
  `end` VARCHAR(80) NULL DEFAULT NULL COMMENT 'YYYYMMDD date of expiration of this vacancy',
  `created_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date creation of',
  `updated_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date change of',
  PRIMARY KEY (`cod_vacancies`))
COMMENT = 'the oportunities of works for future employeers';


-- -----------------------------------------------------
-- Table `nom_vacancies_tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `nom_vacancies_tag` ;

CREATE TABLE IF NOT EXISTS `nom_vacancies_tag` (
  `cod_vacancies_tag` VARCHAR(80) NOT NULL COMMENT 'id of the tag for various vacancies',
  `des_vacancies_tag` VARCHAR(80) NULL DEFAULT NULL COMMENT 'name category or tag .. mostly only two words allowed',
  `created_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date creation of',
  `updated_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date change of',
  PRIMARY KEY (`cod_vacancies_tag`))
COMMENT = 'used to filtering the vacancies';


-- -----------------------------------------------------
-- Table `nom_vacancies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `nom_vacancies` ;

CREATE TABLE IF NOT EXISTS `nom_vacancies` (
  `cod_vacancies` VARCHAR(80) NOT NULL,
  `cod_vacancies_tag` VARCHAR(80) NOT NULL,
  `nom_vacancies_name` VARCHAR(180) NULL COMMENT 'short name of the vacancie, mostly combianiton of most usefull words of title and description',
  `created_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date creation of',
  `updated_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date change of',
  PRIMARY KEY (`cod_vacancies`, `cod_vacancies_tag`))
ENGINE = InnoDB
COMMENT = 'main table of vacancies';


-- -----------------------------------------------------
-- Table `nom_vacancies_applicants`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `nom_vacancies_applicants` ;

CREATE TABLE IF NOT EXISTS `nom_vacancies_applicants` (
  `cod_vacancies` VARCHAR(80) NOT NULL COMMENT 'vacancy that user try to apply, this is the history of both users and vacancies',
  `cod_user` VARCHAR(80) NOT NULL COMMENT 'user that try to apply for',
  `apply_at` VARCHAR(80) NULL COMMENT 'YYYYMMDDHHmmss user apply for',
  `created_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date creation of',
  `updated_at` VARCHAR(80) NOT NULL COMMENT 'YYYYMMDDHHmmss date change of',
  PRIMARY KEY (`cod_vacancies`, `cod_user`))
ENGINE = InnoDB
COMMENT = 'amount of users that applies to vacancies';

